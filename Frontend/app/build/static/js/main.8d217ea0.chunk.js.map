{"version":3,"sources":["scripts/apiRequest.ts","scripts/login.ts","content/User.png","components/Icon.tsx","components/LoginForm.tsx","components/ExecuteButton.tsx","content/logo.svg","components/Logo.tsx","components/LoginPage.tsx","redux/action.ts","scripts/signUp.ts","components/SignUpPage.tsx","components/InputField.tsx","components/SendButton.tsx","scripts/getUsers.ts","components/UserBarIcon.tsx","components/VerifyCheckMark.tsx","components/UserBar.tsx","components/Message.tsx","scripts/getAllMessages.ts","components/ChatBubble.tsx","scripts/notify.ts","scripts/badWords.ts","scripts/findUserInfo.ts","scripts/send.ts","components/Logout.tsx","components/Menu.tsx","components/ChatRoom.tsx","scripts/askNotify.ts","App.tsx","reportWebVitals.ts","redux/reducers/loginReducer.ts","redux/reducers/usernameReducer.ts","redux/reducers/index.ts","index.tsx"],"names":["dotenv","config","apiEndpoints","api","axios","create","baseURL","process","login","username","password","a","okStatus","undefined","console","error","post","user","then","response","status","Icon","id","src","UserIcon","alt","LoginForm","props","placeholder","formPlaceHolder","type","onChange","ExecuteButton","buttonRef","useRef","useEffect","element","current","window","addEventListener","e","code","click","removeEventListener","onClick","onclick","ref","text","Logo","innerWidth","logo","Login","usernameData","passwordData","useState","errorMessage","setErrorMessage","authenticated","useSelector","state","dispatch","useDispatch","to","target","value","isOk","payload","setTimeout","signUp","passwordConfirm","uuid","blocked","verified","bot","SignUpPage","passwordConfirmData","ok","setOk","data","InputField","onChangeEvent","SendButton","getAllUsers","get","userList","UserBarIcon","VerifyCheckMark","UserBar","setUserList","returnData","viewOnClick","map","className","Message","content","getAllMessage","messages","socket","io","ChatBubble","showMessageHandler","setMessages","message","on","chatMessage","newMessage","tittle","body","Notification","icon","scrollIntoView","badWords","findUserInfo","userInfo","send","messageReference","toLowerCase","i","length","includes","emit","err","warn","disconnect","Logout","Menu","ChatRoom","view","setView","textBoxData","permission","requestPermission","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loginReducer","loggedInState","action","usernameReducer","usernameState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";wnBAKAA,IAAOC,SAcA,IAAMC,EACY,uBADZA,EAEU,qBAFVA,EAGK,eAHLA,EAII,aAJJA,EAKO,gBAMPC,EAAMC,IAAMC,OAAO,CAC9BC,QAASC,0CC3BEC,EAAK,uCAAG,WACnBC,EACAC,GAFmB,eAAAC,EAAA,yDAKfC,GAAoB,OAGPC,IAAbJ,QAAuCI,IAAbH,GAE5BI,QAAQC,MACN,kNAIFH,GAAW,GAGXA,GAAW,GAGTA,EArBe,0CAwBTT,EACHa,KAAKd,EAA4B,CAChCe,KAAMR,EACNC,SAAUA,IAEXQ,MAAK,SAACC,GAEmB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,SAEtCR,GAAW,GAEW,MAApBO,EAASC,SAAsCR,GAAW,MAnCnD,uDAuCfE,QAAQC,MAAR,MAGAH,GAAW,EA1CI,iCA8CZA,GA9CY,yDAAH,wDCJH,MAA0B,iC,gBCM5BS,EAAiB,WAE5B,OACE,8BAEE,qBAAKC,GAAG,UAAR,SAEE,qBAAKC,IAAKC,EAAUF,GAAG,WAAWG,IAAI,eCDjCC,G,OAA6B,SAACC,GAGzC,OAAIA,EAAMjB,SAEN,qBAAKY,GAAG,YAAR,SAEE,uBACEM,YAAaD,EAAME,gBACnBP,GAAG,UACHQ,KAAK,WACLC,SAAUJ,EAAMI,aAQpB,qBAAKT,GAAG,YAAR,SAEE,uBACEM,YAAaD,EAAME,gBACnBP,GAAG,UACHS,SAAUJ,EAAMI,eCzBbC,G,OAAiC,SAACL,GAE7C,IAAMM,EAAYC,iBAAO,MAkBzB,OAfAC,qBAAU,WAER,IAAMC,EAAUH,EAAUI,QAS1B,OANAC,OAAOC,iBAAiB,WAAW,SAACC,GAEnB,UAAXA,EAAEC,MAAkBL,EAAQM,WAI3BJ,OAAOK,oBAAoB,WAAW,iBAC5C,IAID,8BAEE,wBAAQC,QAASjB,EAAMkB,QAASvB,GAAG,SAASwB,IAAKb,EAAjD,SACGN,EAAMoB,WCnCA,MAA0B,iCCM5BC,G,OAAiB,WAE5B,OAAIV,OAAOW,WAAa,IAAY,KAIhC,sBAAK3B,GAAG,cAAR,UAEE,oBAAIA,GAAG,WAAP,SAAmB,eAEnB,qBAAKC,IAAK2B,EAAM5B,GAAG,mBCCd6B,EAAkB,WAE7B,IAWIC,EACAC,EAZJ,EAAsCC,mBAAiB,IAAvD,mBAAKC,EAAL,KAAmBC,EAAnB,KAGMC,EAAgBC,aAAY,SAACC,GACjC,OAAOA,EAAMnD,SAIToD,EAAWC,cAiBjB,OAAKJ,EAkEDA,EAEA,8BAEE,cAAC,IAAD,CAAUK,GAAG,qCAJnB,EAhEI,gCAEE,cAAC,EAAD,IAEA,sBAAKxC,GAAG,cAAR,UAEE,cAAC,EAAD,IACA,sBAAKA,GAAG,OAAR,UAEE,cAAC,EAAD,CACEO,gBAAgB,gBAChBnB,UAAU,EACVqB,SAxBQ,SAACS,GACnBY,EAAeZ,EAAEuB,OAAOC,SA0BhB,cAAC,EAAD,CACEnC,gBAAgB,gBAChBnB,UAAU,EACVqB,SAzBQ,SAACS,GACnBa,EAAeb,EAAEuB,OAAOC,YA4BlB,wBAAQ1C,GAAG,eAAX,SAA2BiC,IAC3B,uBAGA,sBAAKjC,GAAG,SAAR,UACE,cAAC,IAAD,CAAMwC,GAAG,UAAUxC,GAAG,aAAtB,SACE,sDAIF,cAAC,EAAD,CACEyB,KAAK,aACLF,QAAS,WAEPrC,EAAM4C,EAAcC,GAAcnC,MAChC,SAAC+C,GAEKA,IAEFL,EClFb,CACL9B,KAAM,iBDkFY8B,ECrEb,CACL9B,KAAM,oBACNoC,QDmE+Cd,KAE1Ba,IAEHnD,QAAQC,MAAR,0CACqCqC,EADrC,kDAGAI,EAAgB,yCAChBW,YAAW,WACTX,EAAgB,MACf,sB,SE7FZY,EAAM,uCAAG,WACpB3D,EACAC,EACA2D,GAHoB,eAAA1D,EAAA,yDAMhBC,GAAW,EAEXyD,IAAoB3D,GAEtBE,GAAW,EAEXE,QAAQC,MACN,mMAEsBH,GAAW,OAItBC,IAAbJ,QACaI,IAAbH,QACoBG,IAApBwD,IAGAzD,GAAW,EAEXE,QAAQC,MACN,iNAKAH,EAhCgB,0CAmCVT,EACHa,KAAKd,EAA6B,CACjCoB,GAAIgD,cACJ7D,SAAUA,EACVC,SAAUA,EACV6D,SAAS,EACTC,UAAU,EACVC,KAAK,IAENvD,MAAK,SAACC,GAOgBP,EAJC,MAApBO,EAASC,QACW,MAApBD,EAASC,QACW,MAApBD,EAASC,UAjDC,uDAwDhBN,QAAQC,MAAR,MAGAH,GAAW,EA3DK,iCA+DbA,GA/Da,yDAAH,0DCMN8D,G,OAAuB,WAElC,IAIItB,EACAC,EACAsB,EANJ,EAAsCrB,mBAAiB,IAAvD,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAkBF,oBAAS,GAA3B,mBAAKsB,EAAL,KAASC,EAAT,KAsBA,OAAKD,EAgEDA,EAEA,8BAEE,cAAC,IAAD,CAAUd,GAAG,aAJnB,EA9DI,gCAEE,cAAC,EAAD,IAEA,sBAAKxC,GAAG,eAAR,UAEE,cAAC,EAAD,IAEA,sBAAKA,GAAG,OAAR,UAEE,cAAC,EAAD,CACEZ,UAAU,EACVmB,gBAAgB,gBAChBE,SA7BQ,SAACS,GACnBY,EAAeZ,EAAEuB,OAAOC,SA+BhB,cAAC,EAAD,CACEtD,UAAU,EACVmB,gBAAgB,gBAChBE,SA/BQ,SAACS,GACnBa,EAAeb,EAAEuB,OAAOC,SAiChB,cAAC,EAAD,CACEtD,UAAU,EACVmB,gBAAgB,mBAChBE,SAhCe,SAACS,GAC1BmC,EAAsBnC,EAAEuB,OAAOC,YAmCzB,wBAAQ1C,GAAG,eAAX,SAA2BiC,IAC3B,uBAEA,cAAC,IAAD,CAAMO,GAAG,IAAIxC,GAAG,YAAhB,0CAIA,qBAAKA,GAAG,eAAR,SACE,cAAC,EAAD,CACEuB,QAAS,WAEPuB,EAAOhB,EAAcC,EAAcsB,GAAqBzD,MACtD,SAAC4D,GAEKA,EAAMD,GAAM,IAGdrB,EAAgB,mCAChBW,YAAW,WACTX,EAAgB,MACf,UAKXT,KAAK,uBCjFNgC,G,OAA8B,SAACpD,GAE1C,OACE,8BAEE,uBACEL,GAAG,aACHM,YAAaD,EAAMC,YACnBG,SAAUJ,EAAMqD,oB,iBCRXC,G,OAA8B,SAACtD,GAE1C,OACE,8BAEE,cAAC,IAAD,CAAUL,GAAG,aAAasB,QAASjB,EAAMkB,cCVlCqC,EAAW,uCAAG,8BAAAvE,EAAA,+EAOjBR,EACHgF,IAAIjF,GACJgB,MAAK,SAACC,GAEmB,MAApBA,EAASC,QAEXR,GAAW,EAEXwE,EAAWjE,EAAS2D,OAGpBlE,GAAW,EAGXE,QAAQC,MACN,0DACEI,EAASC,YAvBI,sDA6BvBR,GAAW,EAEXE,QAAQC,MAAR,MA/BuB,gCAkClB,CACLK,OAAQR,EACRkE,KAAMM,IApCiB,yDAAH,qDCAXC,G,OAAwB,WAEnC,OACE,qBAAK/D,GAAG,UAAR,SAEE,qBAAKC,IAAKF,EAAMI,IAAI,QAAQH,GAAG,a,iBCRxBgE,G,OAA4B,WACvC,OACE,8BACE,mBAAGhE,GAAG,kBAAN,0BCSOiE,G,OAA2B,SAAC5D,GAEvC,MAA8B2B,mBAA0B,IAAxD,mBAAK8B,EAAL,KAAeI,EAAf,KAWA,OARArD,qBAAU,WAER+C,IAAchE,MAAK,SAACuE,GAClBD,EAAYC,EAAWX,WAExB,IAID,gCACE,sBAAKxD,GAAG,YAAR,UAEE,cAAC,IAAD,CAAmBA,GAAG,aAAasB,QAASjB,EAAM+D,cAAgB,OAEpE,sBAAKpE,GAAG,WAAR,UAEE,oBAAIA,GAAG,SAAP,oBAEC8D,EAASO,KAAI,SAAC1E,GAEb,OAAIA,EAAKuD,SAEL,sBAAKlD,GAAG,OAAR,UAEE,cAAC,EAAD,IAEA,wBAAQsE,UAAU,kBAAlB,SAAqC3E,EAAKR,WAC1C,cAAC,EAAD,MALkBQ,EAAKK,IAW3B,sBAAKA,GAAG,OAAR,UAEE,cAAC,EAAD,IAEA,wBAAQsE,UAAU,kBAAlB,SAAqC3E,EAAKR,aAJxBQ,EAAKK,e,QCxCxBuE,G,OAA2B,SAAClE,GAEvC,OAAIA,EAAM6C,SAEN,sBAAKlD,GAAG,cAAR,UAEE,sBAAKA,GAAG,cAAR,UAEE,oBAAIA,GAAG,WAAP,SAAmBK,EAAMV,OAEzB,qBAAKK,GAAG,YAAR,SACE,cAAC,EAAD,SAIJ,mBAAGA,GAAG,cAAN,SAAqBK,EAAMmE,aAM/B,sBAAKxE,GAAG,cAAR,UAEE,oBAAIA,GAAG,WAAP,SAAmBK,EAAMV,OAEzB,mBAAGK,GAAG,cAAN,SAAqBK,EAAMmE,e,QChCpBC,EAAa,uCAAG,8BAAApF,EAAA,+EAOnBR,EACHgF,IAAIjF,GACJgB,MAAK,SAACC,GAEmB,MAApBA,EAASC,QAEXR,GAAW,EAEXkE,EAAO3D,EAAS2D,OAGhBlE,GAAW,EAEXE,QAAQC,MACN,sDACEI,EAASC,YAtBM,sDA4BzBN,QAAQC,MAAR,MAGAH,GAAW,EA/Bc,gCAkCpB,CACLoF,SAAUlB,EACV1D,OAAQR,IApCiB,yDAAH,qDCUpBqF,G,OAASC,YAAG3F,2CAGL4F,EAAuB,WAElC,IAAMC,EAAqBlE,iBAAO,MAG5BzB,EAAWiD,aAAY,SAACC,GAC5B,OAAOA,EAAMlD,YAIf,EAA8B6C,mBAAkC,IAAhE,mBAAK0C,EAAL,KAAeK,EAAf,KA0CA,OAvCAlE,qBAAU,WAER4D,IAAgB7E,MAAK,SAACoF,GAEpBD,EAAYC,EAAQN,aAItBhG,IAAOC,WACN,IAEHkC,qBAAU,WAER8D,EAAOM,GAAG,WAAW,SAACC,GAEpB,IAAIC,EC1CaH,ED6Cb,iBAAkBhE,SACK,WAArBkE,EAAYvF,MAAqBuF,EAAYvF,OAASR,IC9C3C6F,ED+CN,CACLI,OAAQ,0CACRC,KAAK,GAAD,OAAKH,EAAYvF,KAAjB,kBAA+BuF,EAAYV,UC/CzD,IAAIxD,OAAOsE,aAAaN,EAAQI,OAAQ,CACtCC,KAAML,EAAQK,KACdE,KAAM3D,MDkDJuD,EAAU,sBAAOT,GAAP,CAAiBQ,IAC3BH,EAAY,IACZA,EAAYI,SAIhBtE,qBAAU,WAERiE,EAAmB/D,QAAQyE,mBAC1B,CAACd,IAIF,sBAAK1E,GAAG,aAAR,UACG0E,EAASL,KAAI,SAACW,GAEb,OACE,8BAEE,cAAC,EAAD,CAEErF,KAAMqF,EAAQrF,KACd6E,QAASQ,EAAQR,QACjBtB,SAAU8B,EAAQ9B,UAHb8B,EAAQhF,SASrB,qBAAKwB,IAAKsD,EAAoB9E,GAAG,2BEs+BxByF,EA1jCiB,CAC9B,gBACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,YACA,MACA,UACA,QACA,OACA,QACA,QACA,iBACA,SACA,WACA,QACA,qBACA,mBACA,iBACA,gBACA,QACA,OACA,YACA,YACA,UACA,WACA,YACA,OACA,UACA,OACA,UACA,WACA,SACA,SACA,QACA,QACA,OACA,QACA,UACA,QACA,YACA,OACA,WACA,QACA,SACA,UACA,UACA,aACA,MACA,aACA,UACA,aACA,SACA,YACA,YACA,UACA,YACA,YACA,WACA,UACA,aACA,WACA,UACA,YACA,aACA,QACA,UACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,YACA,YACA,UACA,YACA,WACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,aACA,YACA,YACA,YACA,aACA,YACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,cACA,aACA,OACA,SACA,MACA,UACA,gBACA,YACA,UACA,QACA,QACA,UACA,QACA,OACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,WACA,QACA,cACA,aACA,WACA,cACA,UACA,UACA,WACA,aACA,eACA,eACA,YACA,eACA,UACA,aACA,WACA,SACA,UACA,WACA,SACA,UACA,WACA,eACA,cACA,YACA,OACA,UACA,WACA,WACA,YACA,UACA,WACA,WACA,WACA,WACA,WACA,YACA,QACA,WACA,UACA,MACA,OACA,SACA,UACA,SACA,UACA,cACA,aACA,WACA,cACA,aACA,SACA,UACA,eACA,iBACA,cACA,SACA,gBACA,WACA,UACA,SACA,UACA,aACA,aACA,QACA,QACA,SACA,YACA,YACA,cACA,eACA,WACA,SACA,aACA,aACA,UACA,UACA,QACA,SACA,OACA,WACA,QACA,WACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,UACA,aACA,YACA,WACA,WACA,SACA,gBACA,0BACA,mBACA,aACA,SACA,SACA,WACA,cACA,iBACA,UACA,WACA,cACA,UACA,WACA,WACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,SACA,UACA,UACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,aACA,UACA,SACA,SACA,MACA,eACA,OACA,WACA,WACA,WACA,OACA,aACA,iBACA,OACA,QACA,OACA,OACA,OACA,WACA,QACA,OACA,OACA,cACA,WACA,WACA,YACA,cACA,QACA,SACA,UACA,WACA,aACA,QACA,YACA,SACA,QACA,QACA,SACA,UACA,SACA,SACA,aACA,cACA,YACA,SACA,YACA,cACA,YACA,UACA,gBACA,kBACA,OACA,SACA,aACA,cACA,UACA,SACA,WACA,UACA,UACA,OACA,QACA,WACA,WACA,WACA,cACA,WACA,YACA,cACA,YACA,aACA,UACA,YACA,OACA,QACA,SACA,WACA,eACA,YACA,aACA,WACA,YACA,aACA,YACA,YACA,YACA,cACA,WACA,aACA,WACA,WACA,aACA,cACA,WACA,WACA,UACA,WACA,YACA,cACA,UACA,aACA,WACA,YACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,OACA,QACA,aACA,MACA,SACA,OACA,SACA,SACA,eACA,gBACA,YACA,cACA,WACA,UACA,UACA,WACA,iBACA,gBACA,UACA,OACA,QACA,QACA,SACA,OACA,iCACA,kCACA,gCACA,iCACA,aACA,cACA,eACA,aACA,cACA,eACA,WACA,WACA,aACA,cACA,QACA,SACA,cACA,eACA,SACA,aACA,cACA,QACA,SACA,SACA,QACA,qBACA,QACA,SACA,WACA,SACA,UACA,QACA,gBACA,iBACA,OACA,QACA,OACA,UACA,WACA,WACA,UACA,QACA,OACA,aACA,OACA,aACA,YACA,SACA,WACA,WACA,aACA,aACA,oBACA,SACA,OACA,WACA,WACA,WACA,WACA,QACA,SACA,UACA,gBACA,cACA,OACA,OACA,OACA,SACA,UACA,OACA,YACA,cACA,WACA,YACA,cACA,aACA,aACA,WACA,YACA,aACA,WACA,cACA,WACA,cACA,aACA,YACA,aACA,YACA,cACA,UACA,WACA,aACA,YACA,YACA,QACA,WACA,WACA,YACA,aACA,YAEA,WACA,aACA,aACA,cACA,YACA,WACA,YAEA,MACA,aACA,WACA,OACA,MACA,OACA,MACA,SACA,UACA,OACA,UACA,aACA,cACA,cACA,OACA,WACA,aACA,cACA,QACA,YACA,QACA,QACA,SACA,SACA,MACA,aACA,WACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,WACA,aACA,OACA,UACA,YACA,UACA,QACA,SACA,cACA,cACA,WACA,aACA,WACA,UACA,MACA,QACA,QACA,cACA,UACA,YACA,aACA,OACA,UACA,UACA,SACA,QACA,WACA,SACA,eACA,eACA,YACA,MACA,YACA,cACA,WACA,UACA,YACA,aACA,WACA,OACA,SACA,SACA,UACA,UACA,WACA,OACA,UACA,WACA,UACA,WACA,UACA,YACA,aACA,cACA,OACA,SACA,cACA,SACA,QACA,OACA,WACA,WACA,WACA,aACA,WACA,aACA,WACA,aACA,cACA,UACA,QACA,WACA,aACA,QACA,gBACA,iBACA,eACA,gBACA,QACA,SACA,SACA,WACA,YACA,cACA,cACA,eACA,eACA,OACA,OACA,OACA,WACA,QACA,SACA,OACA,QACA,QACA,OACA,aACA,SACA,UACA,eACA,QACA,QACA,OACA,YACA,aACA,aACA,cACA,eACA,cACA,YACA,UACA,cACA,QACA,MACA,UACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,aACA,cACA,QACA,SACA,OACA,SACA,UACA,OACA,SACA,WACA,UACA,WACA,aACA,eACA,eACA,gBACA,gBACA,cACA,WACA,aACA,aACA,cACA,cACA,eACA,YACA,SACA,OACA,SACA,OACA,SACA,YACA,QACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,WACA,0BACA,SACA,QACA,WACA,UACA,eACA,cACA,MACA,QACA,SACA,SACA,OACA,UACA,SACA,MACA,QACA,UACA,WACA,aACA,YACA,UACA,SACA,SACA,MACA,UACA,aACA,UACA,YACA,cACA,QACA,OACA,QACA,OACA,OACA,OACA,WACA,QACA,SACA,WACA,UACA,MACA,WACA,OACA,MACA,OACA,OACA,OACA,OACA,UACA,SACA,UACA,WACA,YACA,YACA,OACA,SACA,UACA,MACA,SACA,UACA,OACA,aACA,SACA,SACA,QACA,OACA,UACA,OACA,OACA,aACA,WACA,aACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,eACA,aACA,YACA,iBACA,UACA,OACA,WACA,WACA,UACA,aACA,YACA,YACA,WACA,QACA,cACA,aACA,aACA,YACA,aACA,cACA,WACA,eACA,YACA,aACA,aACA,cACA,eACA,eACA,gBACA,gBACA,cACA,YACA,aACA,eACA,eACA,mBACA,UACA,WACA,SACA,UACA,WACA,cACA,WACA,iBACA,SACA,SACA,aACA,eACA,OACA,OACA,QACA,QACA,QACA,OACA,aACA,UACA,SACA,OACA,QACA,SACA,sBACA,aACA,QACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,cACA,WACA,WACA,YACA,YACA,SACA,eACA,gBACA,cACA,eACA,SACA,QACA,SACA,UACA,SACA,WACA,eACA,cACA,eACA,eACA,YACA,aACA,cACA,cACA,cACA,cACA,eACA,cACA,eACA,gBACA,aACA,gBACA,aACA,eACA,eACA,gBACA,eACA,gBACA,iBACA,eACA,cACA,OACA,QACA,cACA,eACA,SACA,eACA,QACA,SACA,OACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,MACA,YACA,UACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,OACA,SACA,QACA,cACA,WACA,QACA,OACA,SACA,UACA,UACA,WACA,QACA,OACA,YACA,SACA,OACA,SACA,SACA,UACA,SACA,YACA,SACA,UACA,UACA,OACA,OACA,QACA,cACA,SACA,QACA,SACA,OACA,OACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,UACA,WACA,SACA,SACA,UACA,QACA,MACA,OACA,OACA,OACA,OACA,UACA,UACA,WACA,UACA,OACA,OACA,WACA,QA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","file":"static/js/main.8d217ea0.chunk.js","sourcesContent":["//Importing packages\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\n\n//Env configuration\ndotenv.config();\n\n//Endpoint interface\ninterface ApiEndpointType {\n  getAllMessageEndpoint: string;\n  loginEndpoint: string;\n  signupEndpoint: string;\n  getAllUsersEndpoint: string;\n  findUserEndpoint: string;\n  reportUserEndpoint: string;\n  blockUsersEndpoint: string;\n}\n\n//Api endpoints\nexport const apiEndpoints: ApiEndpointType = {\n  getAllMessageEndpoint: \"/api/get_all_message\",\n  getAllUsersEndpoint: \"/api/get_all_users\",\n  signupEndpoint: \"/api/sign_up\",\n  loginEndpoint: \"/api/login\",\n  findUserEndpoint: \"/api/get_user\",\n  reportUserEndpoint: \"/api/report_user\",\n  blockUsersEndpoint: \"/api/block_user\",\n};\n\n//Axios for api requests\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n","//Importing packages\nimport { apiEndpoints, api } from \"./apiRequest\";\n\n//login function\nexport const login = async (\n  username: string,\n  password: string\n): Promise<boolean> => {\n  //Ok status variable\n  let okStatus: boolean = false;\n\n  //Check if username and password is empty\n  if (username === undefined || password === undefined) {\n    //Throw error\n    console.error(\n      \"Uncaught Error: username and password must be provided\\n  do not leave field blank\\n   at <input> LoginPage.tsx\\nIf you have found a bug, please report bug at: https://github.com/AlvinC888/Chill-chat/issues\"\n    );\n\n    //Change ok status\n    okStatus = false;\n  } else {\n    //Change ok status\n    okStatus = true;\n  }\n  //Check if ok status is true\n  if (okStatus) {\n    //Contact api\n    try {\n      await api\n        .post(apiEndpoints.loginEndpoint, {\n          user: username,\n          password: password,\n        })\n        .then((response: any): void => {\n          //Check API response status\n          if (response.status === 404 || response.status === 400) {\n            //Change ok status\n            okStatus = false;\n          }\n          if (response.status === 200) /*Change ok status:*/ okStatus = true;\n        });\n    } catch (err) {\n      //Throw error\n      console.error(err);\n\n      //Change ok status\n      okStatus = false;\n    }\n  }\n  //Return status\n  return okStatus;\n};\n","export default __webpack_public_path__ + \"static/media/User.a412ce97.png\";","//Importing packages\nimport React from \"react\";\nimport UserIcon from \"../content/User.png\";\nimport \"./style/Icon.css\";\n\n//Icon component\nexport const Icon: React.FC = () => {\n  //Render component\n  return (\n    <div>\n      {/*Wrapper*/}\n      <div id=\"wrapper\">\n        {/*Icon*/}\n        <img src={UserIcon} id=\"userIcon\" alt=\"Error\" />\n      </div>\n    </div>\n  );\n};\n","//Importing packages\nimport React from \"react\";\nimport \"./style/LoginForm.css\";\n\n//Props interface\ninterface Props {\n  formPlaceHolder: string;\n  password: boolean;\n  onChange: any;\n}\n\n//Login form component\nexport const LoginForm: React.FC<Props> = (props) => {\n  \n  //Render password form\n  if (props.password) {\n    return (\n      <div id=\"container\">\n        {/*Form*/}\n        <input\n          placeholder={props.formPlaceHolder}\n          id=\"textBox\"\n          type=\"password\"\n          onChange={props.onChange}\n        />\n      </div>\n    );\n  }\n  //Render non-password form\n  else {\n    return (\n      <div id=\"container\">\n        {/*Form*/}\n        <input\n          placeholder={props.formPlaceHolder}\n          id=\"textBox\"\n          onChange={props.onChange}\n        />\n      </div>\n    );\n  }\n};\n","//Importing packages\nimport React, { useRef, useEffect } from \"react\";\nimport \"./style/ExecuteButton.css\";\n\n//Props interface\ninterface Props {\n  text: string;\n  onclick: () => any;\n}\n\n//ExecuteButton component\nexport const ExecuteButton: React.FC<Props> = (props) => {\n  //Button ref\n  const buttonRef = useRef(null);\n\n  //Use effect\n  useEffect((): void => {\n    //Button reference\n    const element = buttonRef.current;\n\n    //Listeners\n    window.addEventListener(\"keydown\", (e: KeyboardEvent): void => {\n      //Check button click\n      if (e.code === \"Enter\") element.click();\n    });\n\n    //Clean up listeners\n    return window.removeEventListener(\"keydown\", (): void => {});\n  }, []);\n\n  //Render component\n  return (\n    <div>\n      {/*Button*/}\n      <button onClick={props.onclick} id=\"button\" ref={buttonRef}>\n        {props.text}\n      </button>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.02871b95.svg\";","//Importing packages\nimport React from \"react\";\nimport logo from \"../content/logo.svg\";\nimport \"./style/logo.css\";\n\n//Logo component\nexport const Logo: React.FC = () => {\n  //Render mobile component\n  if (window.innerWidth < 600) return null;\n  else {\n    //Render component\n    return (\n      <div id=\"logoWrapper\">\n        {/*Logo text*/}\n        <h1 id=\"logoText\">{\"Chill&chat\"}</h1>\n        {/*Logo image*/}\n        <img src={logo} id=\"logoImage\" />\n      </div>\n    );\n  }\n};\n","//Importing packages\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style/LoginPage.css\";\nimport { login } from \"../scripts/login\";\nimport { Icon } from \"./Icon\";\nimport { LoginForm } from \"./LoginForm\";\nimport { ExecuteButton } from \"./ExecuteButton\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { RootState } from \"../redux/reducers/index\";\nimport { Logo } from \"./Logo\";\nimport {\n  login as reduxLogin,\n  changeUsername as reduxChangeUsername,\n} from \"../redux/action\";\n\n//Login component\nexport const Login: React.FC = () => {\n  //State\n  let [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  //Redux state\n  const authenticated = useSelector((state: RootState): RootState => {\n    return state.login;\n  });\n\n  //Dispatch\n  const dispatch = useDispatch();\n\n  //Data management variables\n  let usernameData: string;\n  let passwordData: string;\n\n  //Collect username data\n  const getUsername = (e: any): void => {\n    usernameData = e.target.value;\n  };\n\n  //Collect password data\n  const getPassword = (e: any): void => {\n    passwordData = e.target.value;\n  };\n\n  //Render non-authenticated component\n  if (!authenticated) {\n    return (\n      <div>\n        {/*Logo*/}\n        <Logo />\n        {/*Login interface*/}\n        <div id=\"loginParent\">\n          {/*Icon*/}\n          <Icon />\n          <div id=\"form\">\n            {/*User name form*/}\n            <LoginForm\n              formPlaceHolder=\"Your username\"\n              password={false}\n              onChange={getUsername}\n            />\n            {/*Password form*/}\n            <LoginForm\n              formPlaceHolder=\"Your password\"\n              password={true}\n              onChange={getPassword}\n            />\n          </div>\n          {/*Error message*/}\n          <strong id=\"errorMessage\">{errorMessage}</strong>\n          <br />\n\n          {/*Sign up link*/}\n          <div id=\"signup\">\n            <Link to=\"/signup\" id=\"signupLink\">\n              <p>New? Sign up today!</p>\n            </Link>\n\n            {/*Button*/}\n            <ExecuteButton\n              text=\"LET'S GO!!\"\n              onclick={(): void => {\n                //Call login function from login script\n                login(usernameData, passwordData).then(\n                  (isOk: boolean): void => {\n                    //Check ok status\n                    if (isOk) {\n                      //Change redux state\n                      dispatch(reduxLogin());\n                      dispatch(reduxChangeUsername(usernameData));\n                    }\n                    if (!isOk) {\n                      //Display error message\n                      console.error(\n                        `Uncaught error: Cannot login to ${usernameData} using the provided password and information.`\n                      );\n                      setErrorMessage(\"Your password or username is invalid.\");\n                      setTimeout((): void => {\n                        setErrorMessage(\"\");\n                      }, 5000);\n                    }\n                  }\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  //Render authenticated component\n  if (authenticated) {\n    return (\n      <div>\n        {/*Redirect*/}\n        <Redirect to=\"/public-chat-room:8080170\" />\n      </div>\n    );\n  }\n};\n","//Importing packages\nimport { ActionHasParameter, ActionNoParameter } from \"./reduxTypes\";\n\n//Login action\nexport const login = (): ActionNoParameter => {\n  return {\n    type: \"AUTH_SIGN_IN\",\n  };\n};\n\n//Logout action\nexport const logout = (): ActionNoParameter => {\n  return {\n    type: \"AUTH_SIGN_OUT\",\n  };\n};\n\n//Change username action\nexport const changeUsername = (username: string): ActionHasParameter => {\n  return {\n    type: \"AUTH_SET_USERNAME\",\n    payload: username,\n  };\n};\n\n//Clear username action\nexport const clearUsername = (): ActionNoParameter => {\n  return {\n    type: \"AUTH_LOGOUT_CLEAR_USERNAME\",\n  };\n};\n","//Importing packages\nimport { api, apiEndpoints } from \"./apiRequest\";\nimport { v4 as uuid } from \"uuid\";\n\n//Signup function\nexport const signUp = async (\n  username: string,\n  password: string,\n  passwordConfirm: string\n): Promise<Boolean> => {\n  //Ok status\n  let okStatus = false;\n\n  if (passwordConfirm !== password) {\n    //Set ok status\n    okStatus = false;\n    //Throw error\n    console.error(\n      \"Uncaught Error: both password and password confirm must be the same \\nat <input> SignUpPage.tsx\\nIf you have found a bug, please report bug at: https://github.com/AlvinC888/Chill-chat/issues\"\n    );\n  } /*Set ok status:*/ else okStatus = true;\n\n  //Check input conditions\n  if (\n    username === undefined ||\n    password === undefined ||\n    passwordConfirm === undefined\n  ) {\n    //Set ok status\n    okStatus = false;\n    //Throw error\n    console.error(\n      \"Uncaught Error: username and password must be provided\\ndo not leave field blank.\\nat <input> SignUpPage.tsx\\nIf you have found a bug, please report bug at: https://github.com/AlvinC888/Chill-chat/issues\"\n    );\n  }\n\n  //Check if ok status is true\n  if (okStatus) {\n    //Contact API\n    try {\n      await api\n        .post(apiEndpoints.signupEndpoint, {\n          id: uuid(),\n          username: username,\n          password: password,\n          blocked: false,\n          verified: false,\n          bot: false,\n        })\n        .then((response: any): void => {\n          //Check if response was successful\n          if (\n            response.status === 400 ||\n            response.status === 404 ||\n            response.status === 500\n          )\n            /*Set ok status:*/ okStatus = false;\n          /*Set ok status:*/ else okStatus = true;\n        });\n    } catch (err) {\n      //Throw error\n      console.error(err);\n\n      //Set ok status\n      okStatus = false;\n    }\n  }\n  //Return status\n  return okStatus;\n};\n","//Importing packages\nimport React, { useState } from \"react\";\nimport { Icon } from \"./Icon\";\nimport { LoginForm } from \"./LoginForm\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ExecuteButton } from \"./ExecuteButton\";\nimport { signUp } from \"../scripts/signUp\";\nimport { Logo } from \"./Logo\";\nimport \"./style/Signup.css\";\n\n//Sign up component\nexport const SignUpPage: React.FC = () => {\n  //State\n  let [errorMessage, setErrorMessage] = useState<string>(\"\");\n  let [ok, setOk] = useState(false);\n\n  //Data management variables\n  let usernameData: string;\n  let passwordData: string;\n  let passwordConfirmData: string;\n\n  //Collect username data\n  const getUsername = (e: any): void => {\n    usernameData = e.target.value;\n  };\n  //Collect password data\n  const getPassword = (e: any): void => {\n    passwordData = e.target.value;\n  };\n\n  //Collect password confirm data\n  const getPasswordConfirm = (e: any): void => {\n    passwordConfirmData = e.target.value;\n  };\n\n  //Render signup component\n  if (!ok) {\n    return (\n      <div>\n        {/*Logo*/}\n        <Logo />\n        {/*Signup interface*/}\n        <div id=\"signupParent\">\n          {/*Icon*/}\n          <Icon />\n          {/*Form wrapper*/}\n          <div id=\"form\">\n            {/*Username input box*/}\n            <LoginForm\n              password={false}\n              formPlaceHolder=\"Your username\"\n              onChange={getUsername}\n            />\n            {/*Password input box*/}\n            <LoginForm\n              password={true}\n              formPlaceHolder=\"Your password\"\n              onChange={getPassword}\n            />\n            {/*Password confirm input box*/}\n            <LoginForm\n              password={true}\n              formPlaceHolder=\"Confirm password\"\n              onChange={getPasswordConfirm}\n            />\n          </div>\n          {/*Error message*/}\n          <strong id=\"errorMessage\">{errorMessage}</strong>\n          <br />\n          {/*Login link*/}\n          <Link to=\"/\" id=\"loginLink\">\n            Have an account? Login Here!\n          </Link>\n          {/*Execute button*/}\n          <div id=\"buttonParent\">\n            <ExecuteButton\n              onclick={() => {\n                //Call sign up function from signup script\n                signUp(usernameData, passwordData, passwordConfirmData).then(\n                  (data) => {\n                    //Throw error is an error occurred\n                    if (data) setOk(true);\n                    else {\n                      //Throw error\n                      setErrorMessage(\"Unkown error, please try again.\");\n                      setTimeout(() => {\n                        setErrorMessage(\"\");\n                      }, 5000);\n                    }\n                  }\n                );\n              }}\n              text=\"SIGN UP!\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  //Render redirect component\n  if (ok) {\n    return (\n      <div>\n        {/*Redirect*/}\n        <Redirect to=\"/\" />\n      </div>\n    );\n  }\n};\n","//Importing packages\nimport React from \"react\";\nimport \"./style/InputField.css\";\n\n//Props interface\ninterface Props {\n  placeholder: string;\n  onChangeEvent: (e) => void;\n}\n\n//Input field component\nexport const InputField: React.FC<Props> = (props) => {\n  //Render component\n  return (\n    <div>\n      {/*Input field*/}\n      <input\n        id=\"inputField\"\n        placeholder={props.placeholder}\n        onChange={props.onChangeEvent}\n      />\n    </div>\n  );\n};\n","//Importing packages\nimport React from \"react\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport \"./style/SendButton.css\";\n\n//Props interface\ninterface Props {\n  onclick: () => void;\n}\n\n//Send button component\nexport const SendButton: React.FC<Props> = (props) => {\n  //Render button component\n  return (\n    <div>\n      {/*Send Icon*/}\n      <SendIcon id=\"sendButton\" onClick={props.onclick} />\n    </div>\n  );\n};\n","//Importing packages\nimport { api, apiEndpoints } from \"./apiRequest\";\nimport { UserListReturnType } from \"./types\";\nimport { User } from \"./types\";\n\n//Get all users function\nexport const getAllUsers = async (): Promise<UserListReturnType> => {\n  //Variables\n  let okStatus: boolean;\n  let userList: Array<User>;\n\n  //Contact API\n  try {\n    await api\n      .get(apiEndpoints.getAllUsersEndpoint)\n      .then((response: any): void => {\n        //Check response status\n        if (response.status === 200) {\n          //Change ok status\n          okStatus = true;\n          //Assign data to user list\n          userList = response.data;\n        } else {\n          //Set ok status\n          okStatus = false;\n          \n          //Throw error\n          console.error(\n            \"Uncaught Error: The server responded with a status of: \" +\n              response.status\n          );\n        }\n      });\n  } catch (err) {\n    //Change ok status\n    okStatus = false;\n    //Throw error\n    console.error(err);\n  }\n  //Return data\n  return {\n    status: okStatus,\n    data: userList,\n  };\n};\n","//Import packages\nimport React from \"react\";\nimport Icon from \"../content/User.png\";\nimport \"./style/UserBarIcon.css\";\n\n//User bar icon\nexport const UserBarIcon: React.FC = () => {\n  //Render component\n  return (\n    <div id=\"wrapper\">\n      {/*Icon*/}\n      <img src={Icon} alt=\"Error\" id=\"icon\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./style/VerifyCheckMark.css\";\n\nexport const VerifyCheckMark: React.FC = () => {\n  return (\n    <div>\n      <p id=\"verifyCheckMark\">Verified</p>\n    </div>\n  );\n};\n","//Import packages\nimport React, { useEffect, useState } from \"react\";\nimport { getAllUsers } from \"../scripts/getUsers\";\nimport { UserBarIcon } from \"./UserBarIcon\";\nimport { User as UserType } from \"../scripts/types\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { VerifyCheckMark } from \"./VerifyCheckMark\";\nimport \"./style/UserBar.css\";\n\n//Props interface\ninterface Props {\n  viewOnClick: () => void;\n}\n\n//UserBar component\nexport const UserBar: React.FC<Props> = (props) => {\n  //State\n  let [userList, setUserList] = useState<Array<UserType>>([]);\n\n  //Call get user function\n  useEffect((): void => {\n    //Call function\n    getAllUsers().then((returnData: any): void => {\n      setUserList(returnData.data);\n    });\n  }, []);\n\n  //Render component\n  return (\n    <div>\n      <div id=\"outerList\">\n        {/*Hide/unhide button*/}\n        <VisibilityOffIcon id=\"hideButton\" onClick={props.viewOnClick} />{\" \"}\n      </div>\n      <div id=\"userList\">\n        {/*Tittle*/}\n        <h2 id=\"tittle\">Users:</h2>\n        {/*Map users*/}\n        {userList.map((user) => {\n          //Render verified user\n          if (user.verified) {\n            return (\n              <div id=\"user\" key={user.id}>\n                {/*Icon*/}\n                <UserBarIcon />\n                {/*Username*/}\n                <strong className=\"userDisplayName\">{user.username}</strong>\n                <VerifyCheckMark />\n              </div>\n            );\n          }\n          //Render user\n          return (\n            <div id=\"user\" key={user.id}>\n              {/*Icon*/}\n              <UserBarIcon />\n              {/*Username*/}\n              <strong className=\"userDisplayName\">{user.username}</strong>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","//Importing packages\nimport React from \"react\";\nimport \"./style/Message.css\";\nimport { VerifyCheckMark } from \"./VerifyCheckMark\";\n\n//Props interface\ninterface Props {\n  user: string;\n  content: string;\n  verified: boolean;\n}\n\n//Message component\nexport const Message: React.FC<Props> = (props) => {\n  //Render verified message\n  if (props.verified) {\n    return (\n      <div id=\"heroWrapper\">\n        {/*Wrapper*/}\n        <div id=\"userWrapper\">\n          {/*Username*/}\n          <h3 id=\"heroUser\">{props.user}</h3>\n          {/*Check mark*/}\n          <div id=\"checkMark\">\n            <VerifyCheckMark />\n          </div>\n        </div>\n        {/*Content*/}\n        <p id=\"heroContent\">{props.content}</p>\n      </div>\n    );\n  }\n  //Render message\n  return (\n    <div id=\"heroWrapper\">\n      {/*Username*/}\n      <h3 id=\"heroUser\">{props.user}</h3>\n      {/*Content*/}\n      <p id=\"heroContent\">{props.content}</p>\n    </div>\n  );\n};\n","//Importing packages\nimport { apiEndpoints, api } from \"./apiRequest\";\nimport { MessageListReturnType } from \"./types\";\nimport { Message } from \"./types\";\n\n//Get all message function\nexport const getAllMessage = async (): Promise<MessageListReturnType> => {\n  //Variables\n  let okStatus: boolean;\n  let data: Array<Message>;\n\n  //Contact API\n  try {\n    await api\n      .get(apiEndpoints.getAllMessageEndpoint)\n      .then((response: any): void => {\n        //Check response status\n        if (response.status === 200) {\n          //Set ok status\n          okStatus = true;\n          //Set data to response data\n          data = response.data;\n        } else {\n          //Set ok status\n          okStatus = false;\n          //Throw error\n          console.error(\n            \"Uncaught Error: Server responded with a status of: \" +\n              response.status\n          );\n        }\n      });\n  } catch (err) {\n    //Throw error\n    console.error(err);\n\n    //Set ok status\n    okStatus = false;\n  }\n  //Return data\n  return {\n    messages: data,\n    status: okStatus,\n  };\n};\n","//Importing packages\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Message } from \"./Message\";\nimport { RootState } from \"../redux/reducers/index\";\nimport {\n  Message as MessageType,\n  MessageListReturnType,\n} from \"../scripts/types\";\nimport dotenv from \"dotenv\";\nimport { io } from \"socket.io-client\";\nimport { getAllMessage } from \"../scripts/getAllMessages\";\nimport \"./style/ChatBubble.css\";\nimport { notify } from \"../scripts/notify\";\nimport { useSelector } from \"react-redux\";\n\n//SocketIO connection\nconst socket = io(process.env.REACT_APP_WEBSOCKET_URL);\n\n//Chat bubble component\nexport const ChatBubble: React.FC = () => {\n  //Show message handler reference\n  const showMessageHandler = useRef(null);\n\n  //Redux state\n  const username = useSelector((state: RootState): RootState => {\n    return state.username;\n  });\n\n  //Message state\n  let [messages, setMessages] = useState<Array<MessageType | []>>([]);\n\n  //Use effect to run code\n  useEffect((): void => {\n    //Get all messages from api\n    getAllMessage().then((message: MessageListReturnType): void => {\n      //Set state\n      setMessages(message.messages);\n    });\n\n    //Env configuration\n    dotenv.config();\n  }, []);\n\n  useEffect((): void => {\n    //SocketIO listener\n    socket.on(\"message\", (chatMessage: MessageType) => {\n      //New message variable\n      let newMessage: Array<MessageType | []> = messages;\n\n      //Notify user\n      if (\"Notification\" in window) {\n        if (chatMessage.user !== \"SYSTEM\" || chatMessage.user !== username) {\n          notify({\n            tittle: \"You have a new message from Chill&chat!\",\n            body: `${chatMessage.user} says: ${chatMessage.content}`,\n          });\n        }\n      }\n      //Assign and set message\n      newMessage = [...messages, chatMessage];\n      setMessages([]);\n      setMessages(newMessage);\n    });\n  });\n\n  useEffect((): void => {\n    //Scroll handler\n    showMessageHandler.current.scrollIntoView();\n  }, [messages]);\n\n  //Render messages\n  return (\n    <div id=\"chatBubble\">\n      {messages.map((message: MessageType): any => {\n        //Render messages\n        return (\n          <div>\n            {/*Message*/}\n            <Message\n              key={message.id}\n              user={message.user}\n              content={message.content}\n              verified={message.verified}\n            />\n          </div>\n        );\n      })}\n      {/*Scroll handler*/}\n      <div ref={showMessageHandler} id=\"showMessageHandler\" />\n    </div>\n  );\n};\n","//Importing packages\nimport { NotificationMessage } from \"./types\";\nimport logo from \"../content/logo.svg\";\n\n//Notify function\nexport const notify = (message: NotificationMessage): void => {\n  //Send notification\n  new window.Notification(message.tittle, {\n    body: message.body,\n    icon: logo,\n  });\n};\n","//Copyright (C) 2004 Sam Hocevar\n//Database by Zacanger\n//License: https://github.com/zacanger/profane-words/blob/master/LICENSE.md\n//Bad word database\nconst badWords: Array<string> = [\n  \"2 girls 1 cup\",\n  \"2g1c\",\n  \"4r5e\",\n  \"5h1t\",\n  \"5hit\",\n  \"5ht\",\n  \"666\",\n  \"@$$\",\n  \"a s s\",\n  \"a s shole\",\n  \"a55\",\n  \"a55hole\",\n  \"a_s_s\",\n  \"abbo\",\n  \"abeed\",\n  \"abuse\",\n  \"acrotomophilia\",\n  \"aeolus\",\n  \"africoon\",\n  \"ahole\",\n  \"alabama hot pocket\",\n  \"alaskan pipeline\",\n  \"alligator bait\",\n  \"alligatorbait\",\n  \"amcik\",\n  \"anal\",\n  \"analannie\",\n  \"analprobe\",\n  \"analsex\",\n  \"andskota\",\n  \"anilingus\",\n  \"anus\",\n  \"apeshit\",\n  \"ar5e\",\n  \"arabush\",\n  \"arabushs\",\n  \"areola\",\n  \"areole\",\n  \"argie\",\n  \"arian\",\n  \"armo\",\n  \"armos\",\n  \"aroused\",\n  \"arrse\",\n  \"arschloch\",\n  \"arse\",\n  \"arsehole\",\n  \"aryan\",\n  \"ash0le\",\n  \"ash0les\",\n  \"asholes\",\n  \"ass monkey\",\n  \"ass\",\n  \"ass-fucker\",\n  \"ass-hat\",\n  \"ass-pirate\",\n  \"assbag\",\n  \"assbagger\",\n  \"assbandit\",\n  \"assbang\",\n  \"assbanged\",\n  \"assbanger\",\n  \"assbangs\",\n  \"assbite\",\n  \"assblaster\",\n  \"assclown\",\n  \"asscock\",\n  \"asscowboy\",\n  \"asscracker\",\n  \"asses\",\n  \"assface\",\n  \"assfuck\",\n  \"assfucker\",\n  \"assfukka\",\n  \"assgoblin\",\n  \"assh0le\",\n  \"assh0lez\",\n  \"asshat\",\n  \"asshead\",\n  \"assho1e\",\n  \"asshole\",\n  \"assholes\",\n  \"assholz\",\n  \"asshopper\",\n  \"asshore\",\n  \"assjacker\",\n  \"assjockey\",\n  \"asskiss\",\n  \"asskisser\",\n  \"assklown\",\n  \"asslick\",\n  \"asslicker\",\n  \"asslover\",\n  \"assman\",\n  \"assmaster\",\n  \"assmonkey\",\n  \"assmunch\",\n  \"assmuncher\",\n  \"assnigger\",\n  \"asspacker\",\n  \"asspirate\",\n  \"asspuppies\",\n  \"assrammer\",\n  \"assranger\",\n  \"assshit\",\n  \"assshole\",\n  \"asssucker\",\n  \"asswad\",\n  \"asswhole\",\n  \"asswhore\",\n  \"asswipe\",\n  \"asswipes\",\n  \"auto erotic\",\n  \"autoerotic\",\n  \"ayir\",\n  \"azazel\",\n  \"azz\",\n  \"azzhole\",\n  \"b a s t a r d\",\n  \"b i t c h\",\n  \"b o o b\",\n  \"b!+ch\",\n  \"b!tch\",\n  \"b!tchin\",\n  \"b*tch\",\n  \"b00b\",\n  \"b00bies\",\n  \"b00biez\",\n  \"b00bs\",\n  \"b00bz\",\n  \"b17ch\",\n  \"b1tch\",\n  \"b7ch\",\n  \"babeland\",\n  \"babes\",\n  \"baby batter\",\n  \"baby juice\",\n  \"backdoor\",\n  \"backdoorman\",\n  \"badfuck\",\n  \"bagging\",\n  \"ball gag\",\n  \"ball gravy\",\n  \"ball kicking\",\n  \"ball licking\",\n  \"ball sack\",\n  \"ball sucking\",\n  \"ballbag\",\n  \"balllicker\",\n  \"ballsack\",\n  \"bampot\",\n  \"bangbro\",\n  \"bangbros\",\n  \"banger\",\n  \"banging\",\n  \"bareback\",\n  \"barely legal\",\n  \"barelylegal\",\n  \"barenaked\",\n  \"barf\",\n  \"barface\",\n  \"barfface\",\n  \"bassterd\",\n  \"bassterds\",\n  \"bastard\",\n  \"bastardo\",\n  \"bastards\",\n  \"bastardz\",\n  \"basterds\",\n  \"basterdz\",\n  \"bastinado\",\n  \"bawdy\",\n  \"bazongas\",\n  \"bazooms\",\n  \"bbw\",\n  \"bdsm\",\n  \"beaner\",\n  \"beaners\",\n  \"beaney\",\n  \"beaneys\",\n  \"beardedclam\",\n  \"beastality\",\n  \"beastial\",\n  \"beastiality\",\n  \"beastility\",\n  \"beatch\",\n  \"beatoff\",\n  \"beatyourmeat\",\n  \"beaver cleaver\",\n  \"beaver lips\",\n  \"beaver\",\n  \"beef curtains\",\n  \"beeyotch\",\n  \"bellend\",\n  \"beotch\",\n  \"bestial\",\n  \"bestiality\",\n  \"bi curious\",\n  \"bi+ch\",\n  \"bi7ch\",\n  \"biatch\",\n  \"bicurious\",\n  \"big black\",\n  \"big breasts\",\n  \"big knockers\",\n  \"big tits\",\n  \"bigass\",\n  \"bigbastard\",\n  \"bigbreasts\",\n  \"bigbutt\",\n  \"bigtits\",\n  \"bimbo\",\n  \"bimbos\",\n  \"bint\",\n  \"birdlock\",\n  \"bitch\",\n  \"bitchass\",\n  \"bitched\",\n  \"bitcher\",\n  \"bitchers\",\n  \"bitches\",\n  \"bitchez\",\n  \"bitchin\",\n  \"bitching\",\n  \"bitchslap\",\n  \"bitchtit\",\n  \"bitchy\",\n  \"biteme\",\n  \"bitties\",\n  \"black cock\",\n  \"blackcock\",\n  \"blackman\",\n  \"blackout\",\n  \"blacks\",\n  \"blonde action\",\n  \"blonde on blonde action\",\n  \"blonde on blonde\",\n  \"bloodclaat\",\n  \"bloody\",\n  \"blow j\",\n  \"blow job\",\n  \"blow your l\",\n  \"blow your load\",\n  \"blowjob\",\n  \"blowjobs\",\n  \"blue waffle\",\n  \"bluegum\",\n  \"bluegums\",\n  \"blumpkin\",\n  \"bo ob\",\n  \"bo obs\",\n  \"boang\",\n  \"boche\",\n  \"boches\",\n  \"bodily\",\n  \"boffing\",\n  \"bogan\",\n  \"bohunk\",\n  \"boink\",\n  \"boiolas\",\n  \"bollick\",\n  \"bollock\",\n  \"bollocks\",\n  \"bollok\",\n  \"bollox\",\n  \"bombers\",\n  \"bombing\",\n  \"bomd\",\n  \"bondage\",\n  \"boned\",\n  \"boner\",\n  \"boners\",\n  \"bong\",\n  \"boob\",\n  \"boobies\",\n  \"boobs\",\n  \"booby\",\n  \"boobz\",\n  \"boody\",\n  \"booger\",\n  \"bookie\",\n  \"boong\",\n  \"boonga\",\n  \"boongas\",\n  \"boongs\",\n  \"boonie\",\n  \"boonies\",\n  \"booobs\",\n  \"boooobs\",\n  \"booooobs\",\n  \"booooooobs\",\n  \"breasts\",\n  \"buceta\",\n  \"bugger\",\n  \"bum\",\n  \"bunny fucker\",\n  \"butt\",\n  \"butthole\",\n  \"buttmuch\",\n  \"buttplug\",\n  \"c0ck\",\n  \"c0cksucker\",\n  \"carpet muncher\",\n  \"cawk\",\n  \"chink\",\n  \"cipa\",\n  \"cl1t\",\n  \"clit\",\n  \"clitoris\",\n  \"clits\",\n  \"cnut\",\n  \"cock\",\n  \"cock-sucker\",\n  \"cockface\",\n  \"cockhead\",\n  \"cockmunch\",\n  \"cockmuncher\",\n  \"cocks\",\n  \"bootee\",\n  \"bootlip\",\n  \"bootlips\",\n  \"booty call\",\n  \"booty\",\n  \"bootycall\",\n  \"boozer\",\n  \"boozy\",\n  \"bosch\",\n  \"bosche\",\n  \"bosches\",\n  \"boschs\",\n  \"bosomy\",\n  \"bounty bar\",\n  \"bounty bars\",\n  \"bountybar\",\n  \"brea5t\",\n  \"breastjob\",\n  \"breastlover\",\n  \"breastman\",\n  \"brothel\",\n  \"brown showers\",\n  \"brunette action\",\n  \"btch\",\n  \"buceta\",\n  \"buddhahead\",\n  \"buddhaheads\",\n  \"buffies\",\n  \"bugger\",\n  \"buggered\",\n  \"buggery\",\n  \"bukkake\",\n  \"bule\",\n  \"bules\",\n  \"bullcrap\",\n  \"bulldike\",\n  \"bulldyke\",\n  \"bullet vibe\",\n  \"bullshit\",\n  \"bullshits\",\n  \"bullshitted\",\n  \"bullturds\",\n  \"bumblefuck\",\n  \"bumfuck\",\n  \"bung hole\",\n  \"bung\",\n  \"bunga\",\n  \"bungas\",\n  \"bunghole\",\n  \"bunny fucker\",\n  \"burr head\",\n  \"burr heads\",\n  \"burrhead\",\n  \"burrheads\",\n  \"butchbabes\",\n  \"butchdike\",\n  \"butchdyke\",\n  \"butt plug\",\n  \"butt-pirate\",\n  \"buttbang\",\n  \"buttcheeks\",\n  \"buttface\",\n  \"buttfuck\",\n  \"buttfucker\",\n  \"buttfuckers\",\n  \"butthead\",\n  \"butthole\",\n  \"buttman\",\n  \"buttmuch\",\n  \"buttmunch\",\n  \"buttmuncher\",\n  \"buttons\",\n  \"buttpirate\",\n  \"buttplug\",\n  \"buttstain\",\n  \"buttwipe\",\n  \"byatch\",\n  \"c u n t\",\n  \"c-0-c-k\",\n  \"c-o-c-k\",\n  \"c-u-n-t\",\n  \"c.0.c.k\",\n  \"c.o.c.k.\",\n  \"c.u.n.t\",\n  \"c0ck\",\n  \"c0cks\",\n  \"c0cksucker\",\n  \"c0k\",\n  \"cabron\",\n  \"caca\",\n  \"cacker\",\n  \"cahone\",\n  \"camel jockey\",\n  \"camel jockeys\",\n  \"camel toe\",\n  \"cameljockey\",\n  \"cameltoe\",\n  \"camgirl\",\n  \"camslut\",\n  \"camwhore\",\n  \"carpet muncher\",\n  \"carpetmuncher\",\n  \"carruth\",\n  \"cawk\",\n  \"cawks\",\n  \"cazzo\",\n  \"cervix\",\n  \"chav\",\n  \"cheese eating surrender monkey\",\n  \"cheese eating surrender monkies\",\n  \"cheeseeating surrender monkey\",\n  \"cheeseeating surrender monkies\",\n  \"cheesehead\",\n  \"cheeseheads\",\n  \"cherrypopper\",\n  \"chickslick\",\n  \"china swede\",\n  \"china swedes\",\n  \"chinaman\",\n  \"chinamen\",\n  \"chinaswede\",\n  \"chinaswedes\",\n  \"chinc\",\n  \"chincs\",\n  \"ching chong\",\n  \"ching chongs\",\n  \"chinga\",\n  \"chingchong\",\n  \"chingchongs\",\n  \"chink\",\n  \"chinks\",\n  \"chinky\",\n  \"choad\",\n  \"chocolate rosebuds\",\n  \"chode\",\n  \"chodes\",\n  \"chonkies\",\n  \"chonky\",\n  \"chonkys\",\n  \"chraa\",\n  \"christ killer\",\n  \"christ killers\",\n  \"chug\",\n  \"chugs\",\n  \"chuj\",\n  \"chunger\",\n  \"chungers\",\n  \"chunkies\",\n  \"chunkys\",\n  \"chute\",\n  \"cipa\",\n  \"circlejerk\",\n  \"cl1t\",\n  \"clamdigger\",\n  \"clamdiver\",\n  \"clamps\",\n  \"clansman\",\n  \"clansmen\",\n  \"clanswoman\",\n  \"clanswomen\",\n  \"cleveland steamer\",\n  \"climax\",\n  \"clit\",\n  \"clitface\",\n  \"clitfuck\",\n  \"clitoris\",\n  \"clitorus\",\n  \"clits\",\n  \"clitty\",\n  \"clogwog\",\n  \"clover clamps\",\n  \"clusterfuck\",\n  \"cnts\",\n  \"cntz\",\n  \"cnut\",\n  \"cocain\",\n  \"cocaine\",\n  \"cock\",\n  \"cock-head\",\n  \"cock-sucker\",\n  \"cockbite\",\n  \"cockblock\",\n  \"cockblocker\",\n  \"cockburger\",\n  \"cockcowboy\",\n  \"cockface\",\n  \"cockfight\",\n  \"cockfucker\",\n  \"cockhead\",\n  \"cockholster\",\n  \"cockknob\",\n  \"cockknocker\",\n  \"cocklicker\",\n  \"cocklover\",\n  \"cockmonkey\",\n  \"cockmunch\",\n  \"cockmuncher\",\n  \"cocknob\",\n  \"cocknose\",\n  \"cocknugget\",\n  \"cockqueen\",\n  \"cockrider\",\n  \"cocks\",\n  \"cockshit\",\n  \"cocksman\",\n  \"cocksmith\",\n  \"cocksmoker\",\n  \"cocksucer\",\n\n  \"cocksuck\",\n  \"cocksucked\",\n  \"cocksucker\",\n  \"cocksucking\",\n  \"cocksucks\",\n  \"cocksuka\",\n  \"cocksukka\",\n\n  \"cok\",\n  \"cokmuncher\",\n  \"coksucka\",\n  \"coon\",\n  \"cox\",\n  \"crap\",\n  \"cum\",\n  \"cummer\",\n  \"cumming\",\n  \"cums\",\n  \"cumshot\",\n  \"cunilingus\",\n  \"cunillingus\",\n  \"cunnilingus\",\n  \"cunt\",\n  \"cuntlick\",\n  \"cuntlicker\",\n  \"cuntlicking\",\n  \"cunts\",\n  \"cocktease\",\n  \"cocky\",\n  \"cohee\",\n  \"coital\",\n  \"coitus\",\n  \"cok\",\n  \"cokmuncher\",\n  \"coksucka\",\n  \"commie\",\n  \"condom\",\n  \"coochie\",\n  \"coochy\",\n  \"coolie\",\n  \"coolies\",\n  \"cooly\",\n  \"coon ass\",\n  \"coon asses\",\n  \"coon\",\n  \"coonass\",\n  \"coonasses\",\n  \"coondog\",\n  \"coons\",\n  \"cooter\",\n  \"coprolagnia\",\n  \"coprophilia\",\n  \"copulate\",\n  \"corksucker\",\n  \"cornhole\",\n  \"cowgirl\",\n  \"cox\",\n  \"cra5h\",\n  \"crabs\",\n  \"crackcocain\",\n  \"cracker\",\n  \"crackpipe\",\n  \"crackwhore\",\n  \"crap\",\n  \"crapola\",\n  \"crapper\",\n  \"crappy\",\n  \"crash\",\n  \"creampie\",\n  \"crotch\",\n  \"crotchjockey\",\n  \"crotchmonkey\",\n  \"crotchrot\",\n  \"cum\",\n  \"cumbubble\",\n  \"cumdumpster\",\n  \"cum face\",\n  \"cumfest\",\n  \"cumjockey\",\n  \"cum licker\",\n  \"cumlickr\",\n  \"cumm\",\n  \"cummer\",\n  \"cummin\",\n  \"cumming\",\n  \"cumquat\",\n  \"cumqueen\",\n  \"cums\",\n  \"cumshot\",\n  \"cumshots\",\n  \"cumslut\",\n  \"cumstain\",\n  \"cumtart\",\n  \"cumsucker\",\n  \"cunilingus\",\n  \"cunillingus\",\n  \"cunn\",\n  \"cunnie\",\n  \"cunnilingus\",\n  \"cunntt\",\n  \"cunny\",\n  \"cunt\",\n  \"cunteyed\",\n  \"cuntface\",\n  \"cuntfuck\",\n  \"cuntfucker\",\n  \"cunthole\",\n  \"cunthunter\",\n  \"cuntlick\",\n  \"cuntlicker\",\n  \"cuntlicking\",\n  \"cuntrag\",\n  \"cunts\",\n  \"cuntslut\",\n  \"cuntsucker\",\n  \"cuntz\",\n  \"curry muncher\",\n  \"curry munchers\",\n  \"currymuncher\",\n  \"currymunchers\",\n  \"cushi\",\n  \"cushis\",\n  \"cyalis\",\n  \"cyberfuc\",\n  \"cyberfuck\",\n  \"cyberfucked\",\n  \"cyberfucker\",\n  \"cyberfuckers\",\n  \"cyberfucking\",\n  \"d1ck\",\n  \"damn\",\n  \"dick\",\n  \"dickhead\",\n  \"dildo\",\n  \"dildos\",\n  \"dink\",\n  \"dinks\",\n  \"dirsa\",\n  \"dlck\",\n  \"dog-fucker\",\n  \"doggin\",\n  \"dogging\",\n  \"donkeyribber\",\n  \"doosh\",\n  \"duche\",\n  \"dyke\",\n  \"ejaculate\",\n  \"ejaculated\",\n  \"ejaculates\",\n  \"ejaculating\",\n  \"ejaculatings\",\n  \"ejaculation\",\n  \"ejakulate\",\n  \"f u c k\",\n  \"f u c k e r\",\n  \"f4nny\",\n  \"fag\",\n  \"fagging\",\n  \"faggitt\",\n  \"faggot\",\n  \"faggs\",\n  \"fagot\",\n  \"fagots\",\n  \"fags\",\n  \"fanny\",\n  \"fannyflaps\",\n  \"fannyfucker\",\n  \"fanyy\",\n  \"fatass\",\n  \"fcuk\",\n  \"fcuker\",\n  \"fcuking\",\n  \"feck\",\n  \"fecker\",\n  \"felching\",\n  \"fellate\",\n  \"fellatio\",\n  \"fingerfuck\",\n  \"fingerfucked\",\n  \"fingerfucker\",\n  \"fingerfuckers\",\n  \"fingerfucking\",\n  \"fingerfucks\",\n  \"fistfuck\",\n  \"fistfucked\",\n  \"fistfucker\",\n  \"fistfuckers\",\n  \"fistfucking\",\n  \"fistfuckings\",\n  \"fistfucks\",\n  \"flange\",\n  \"fook\",\n  \"fooker\",\n  \"fuck\",\n  \"Fucker\",\n  \"AssFucker\",\n  \"fucka\",\n  \"fucked\",\n  \"fucker\",\n  \"fuckers\",\n  \"fuckhead\",\n  \"fuckheads\",\n  \"fuckin\",\n  \"fucking\",\n  \"fuckings\",\n  \"fuckingshitmotherfucker\",\n  \"fuckme\",\n  \"fucks\",\n  \"fuckwhit\",\n  \"fuckwit\",\n  \"fudge packer\",\n  \"fudgepacker\",\n  \"fuk\",\n  \"fuker\",\n  \"fukker\",\n  \"fukkin\",\n  \"fuks\",\n  \"fukwhit\",\n  \"fukwit\",\n  \"fux\",\n  \"fux0r\",\n  \"f_u_c_k\",\n  \"gangbang\",\n  \"gangbanged\",\n  \"gangbangs\",\n  \"gaylord\",\n  \"gaysex\",\n  \"goatse\",\n  \"God\",\n  \"god-dam\",\n  \"god-damned\",\n  \"goddamn\",\n  \"goddamned\",\n  \"hardcoresex\",\n  \"heshe\",\n  \"hoar\",\n  \"hoare\",\n  \"hoer\",\n  \"homo\",\n  \"hore\",\n  \"horniest\",\n  \"horny\",\n  \"hotsex\",\n  \"jack-off\",\n  \"jackoff\",\n  \"jap\",\n  \"jerk-off\",\n  \"jism\",\n  \"jiz\",\n  \"jizm\",\n  \"jizz\",\n  \"kawk\",\n  \"knob\",\n  \"knobead\",\n  \"knobed\",\n  \"knobend\",\n  \"knobhead\",\n  \"knobjocky\",\n  \"knobjokey\",\n  \"kock\",\n  \"kondum\",\n  \"kondums\",\n  \"kum\",\n  \"kummer\",\n  \"kumming\",\n  \"kums\",\n  \"kunilingus\",\n  \"l3i+ch\",\n  \"l3itch\",\n  \"labia\",\n  \"lust\",\n  \"lusting\",\n  \"m0f0\",\n  \"m0fo\",\n  \"m45terbate\",\n  \"ma5terb8\",\n  \"ma5terbate\",\n  \"mabuno\",\n  \"mabunos\",\n  \"macaca\",\n  \"macacas\",\n  \"magicwand\",\n  \"mahbuno\",\n  \"mahbunos\",\n  \"make me come\",\n  \"makemecome\",\n  \"makemecum\",\n  \"male squirting\",\n  \"mamhoon\",\n  \"mams\",\n  \"manhater\",\n  \"manpaste\",\n  \"maricon\",\n  \"maricón\",\n  \"marijuana\",\n  \"masochist\",\n  \"masokist\",\n  \"massa\",\n  \"massterbait\",\n  \"masstrbait\",\n  \"masstrbate\",\n  \"mastabate\",\n  \"mastabater\",\n  \"master-bate\",\n  \"masterb8\",\n  \"masterbaiter\",\n  \"masterbat\",\n  \"masterbat3\",\n  \"masterbate\",\n  \"masterbates\",\n  \"masterbating\",\n  \"masterbation\",\n  \"masterbations\",\n  \"masterblaster\",\n  \"mastrabator\",\n  \"masturbat\",\n  \"masturbate\",\n  \"masturbating\",\n  \"masturbation\",\n  \"mattressprincess\",\n  \"mau mau\",\n  \"mau maus\",\n  \"maumau\",\n  \"maumaus\",\n  \"mcfagget\",\n  \"meatbeatter\",\n  \"meatrack\",\n  \"menage a trois\",\n  \"menage\",\n  \"menses\",\n  \"menstruate\",\n  \"menstruation\",\n  \"merd\",\n  \"meth\",\n  \"mgger\",\n  \"mggor\",\n  \"mibun\",\n  \"mick\",\n  \"mickeyfinn\",\n  \"mideast\",\n  \"mierda\",\n  \"milf\",\n  \"minge\",\n  \"minger\",\n  \"missionary position\",\n  \"missionary\",\n  \"mo-fo\",\n  \"mockey\",\n  \"mockie\",\n  \"mocky\",\n  \"mof0\",\n  \"mofo\",\n  \"moky\",\n  \"molest\",\n  \"molestation\",\n  \"molester\",\n  \"molestor\",\n  \"moneyshot\",\n  \"monkleigh\",\n  \"moolie\",\n  \"moon cricket\",\n  \"moon crickets\",\n  \"mooncricket\",\n  \"mooncrickets\",\n  \"mormon\",\n  \"moron\",\n  \"moskal\",\n  \"moskals\",\n  \"moslem\",\n  \"mosshead\",\n  \"motha fucker\",\n  \"motha fuker\",\n  \"motha fukkah\",\n  \"motha fukker\",\n  \"mothafuck\",\n  \"mothafucka\",\n  \"mothafuckas\",\n  \"mothafuckaz\",\n  \"mothafucked\",\n  \"mothafucker\",\n  \"mothafuckers\",\n  \"mothafuckin\",\n  \"mothafucking\",\n  \"mothafuckings\",\n  \"mothafucks\",\n  \"mother fucker\",\n  \"motherfuck\",\n  \"motherfucked\",\n  \"motherfucker\",\n  \"motherfuckers\",\n  \"motherfuckin\",\n  \"motherfucking\",\n  \"motherfuckings\",\n  \"motherfuckka\",\n  \"motherfucks\",\n  \"muff\",\n  \"mutha\",\n  \"muthafecker\",\n  \"muthafuckker\",\n  \"muther\",\n  \"mutherfucker\",\n  \"n1gga\",\n  \"n1gger\",\n  \"nazi\",\n  \"nigg3r\",\n  \"nigg4h\",\n  \"nigga\",\n  \"niggah\",\n  \"niggas\",\n  \"niggaz\",\n  \"nigger\",\n  \"niggers\",\n  \"nob\",\n  \"nob jokey\",\n  \"nobhead\",\n  \"nobjocky\",\n  \"nobjokey\",\n  \"numbnuts\",\n  \"nutsack\",\n  \"orgasim\",\n  \"orgasims\",\n  \"orgasm\",\n  \"orgasms\",\n  \"p0rn\",\n  \"pawn\",\n  \"pecker\",\n  \"penis\",\n  \"penisfucker\",\n  \"phonesex\",\n  \"phuck\",\n  \"phuk\",\n  \"phuked\",\n  \"phuking\",\n  \"phukked\",\n  \"phukking\",\n  \"phuks\",\n  \"phuq\",\n  \"pigfucker\",\n  \"pimpis\",\n  \"piss\",\n  \"pissed\",\n  \"pisser\",\n  \"pissers\",\n  \"pisses\",\n  \"pissflaps\",\n  \"pissin\",\n  \"pissing\",\n  \"pissoff\",\n  \"poop\",\n  \"porn\",\n  \"porno\",\n  \"pornography\",\n  \"pornos\",\n  \"prick\",\n  \"pricks\",\n  \"pron\",\n  \"pube\",\n  \"pusse\",\n  \"pussi\",\n  \"pussies\",\n  \"pussy\",\n  \"pussys\",\n  \"rectum\",\n  \"retard\",\n  \"rimjaw\",\n  \"rimming\",\n  \"s hit\",\n  \"s.o.b.\",\n  \"sadist\",\n  \"schlong\",\n  \"screwing\",\n  \"scroat\",\n  \"scrote\",\n  \"scrotum\",\n  \"semen\",\n  \"sex\",\n  \"sh!+\",\n  \"sh!t\",\n  \"sh1t\",\n  \"shag\",\n  \"shagger\",\n  \"shaggin\",\n  \"shagging\",\n  \"shemale\",\n  \"shi+\",\n  \"shit\",\n  \"shitdick\",\n  \"shite\",\n  \"shited\",\n  \"shitey\",\n  \"shitfuck\",\n  \"shitfull\",\n  \"shithead\",\n  \"shiting\",\n  \"shitings\",\n  \"shits\",\n  \"shitted\",\n  \"shitter\",\n  \"shitters\",\n  \"shitting\",\n  \"shittings\",\n  \"shitty\",\n  \"skank\",\n  \"slut\",\n  \"sluts\",\n  \"smegma\",\n  \"smut\",\n  \"snatch\",\n  \"son-of-a-bitch\",\n  \"spac\",\n  \"spunk\",\n  \"s_h_i_t\",\n  \"t1tt1e5\",\n  \"t1tties\",\n  \"teets\",\n  \"teez\",\n  \"testical\",\n  \"testicle\",\n  \"tit\",\n  \"titfuck\",\n  \"tits\",\n  \"titt\",\n  \"tittie5\",\n  \"tittiefucker\",\n  \"titties\",\n  \"tittyfuck\",\n  \"tittywank\",\n  \"titwank\",\n  \"tosser\",\n  \"turd\",\n  \"tw4t\",\n  \"twat\",\n  \"twathead\",\n  \"twatty\",\n  \"twunt\",\n  \"twunter\",\n  \"v14gra\",\n  \"v1gra\",\n  \"vagina\",\n  \"viagra\",\n  \"vulva\",\n  \"w00se\",\n  \"wang\",\n  \"wank\",\n  \"wanker\",\n  \"wanky\",\n  \"whoar\",\n  \"whore\",\n  \"willies\",\n  \"willy\",\n  \"xrated\",\n]\n\n//Export database\nexport default badWords;\n","//Importing packages\nimport { api, apiEndpoints } from \"./apiRequest\";\nimport { UserInfoReturn, User } from \"./types\";\n\n//Find user function\nexport const findUserInfo = async (user: string): Promise<UserInfoReturn> => {\n  //Variables\n  let userInfo: User;\n  let okStatus: boolean = false;\n\n  //Contact API\n  try {\n    await api\n      .get(`${apiEndpoints.findUserEndpoint}/${user}`)\n      .then((response: any): void => {\n        //Check response status\n        if (response.status === 200) {\n          //Assign data\n          userInfo = response.data;\n\n          //Assign ok status\n          okStatus = true;\n        }\n      });\n  } catch (err) {\n    //Throw error\n    console.error(err);\n\n    //Assign ok status\n    okStatus = false;\n  }\n\n  //Return data\n  return {\n    okStatus: okStatus,\n    data: userInfo,\n  };\n};\n","//Importing packages\nimport dotenv from \"dotenv\";\nimport { io } from \"socket.io-client\";\nimport badWords from \"./badWords\";\nimport { findUserInfo } from \"./findUserInfo\";\nimport { Message } from \"./types\";\n\n//Env configuration\ndotenv.config();\n\n//Send function\nexport const send = async (message: Message): Promise<void> => {\n  //Variables\n  const username: string = message.user;\n  let messageReference: string = message.content.toLowerCase();\n\n  //Web socket\n  const socket = io(process.env.REACT_APP_WEBSOCKET_URL);\n\n  //Check verified user message\n  await findUserInfo(message.user).then((response: any): void => {\n    //Check user verify status\n    if (response.data.verified) message.verified = true;\n    else message.verified = false;\n  });\n\n  //Check if message is empty\n  if (message.content === undefined || message.content === \"\") return;\n\n  //Filter words\n  for (let i: number = 0; i < badWords.length; i++) {\n    //Check word\n    if (messageReference.includes(badWords[i])) {\n      //Edit message\n      message.content = `ERROR: Message UNAVAILABLE, The message that @${username} was trying send was DELETED by the profanity filter.`;\n      message.user = \"SYSTEM\";\n      message.verified = true;\n      break;\n    } else continue;\n  }\n\n  //Emit message\n  socket.emit(\"message\", message);\n\n  //Handle error\n  socket.on(\"connect_error\", (err) => {\n    //Throw error\n    console.error(`Uncaught Connection Error: ${err.message}`);\n    console.warn(\n      \"If you have found a bug please report bugs here: https://github.com/AlvinC888/Chill-chat/issues\"\n    );\n\n    //Disconnect socket\n    socket.disconnect();\n  });\n};\n","//Importing packages\nimport React from \"react\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport \"./style/Logout.css\";\n\n//Props interface\ninterface Props {\n  onClick: () => void;\n}\n\n//logout component\nexport const Logout: React.FC<Props> = (props) => {\n  //Render component\n  return (\n    <div>\n      {/*Logout icon*/}\n      <HomeIcon onClick={props.onClick} id=\"logout\" />\n    </div>\n  );\n};\n","//Importing packages\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout, clearUsername } from \"../redux/action\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { Logout } from \"./Logout\";\nimport \"./style/Menu.css\";\n\n//Props interface\ninterface Props {\n  viewOnClick: () => void;\n}\n\n//Menu component\nexport const Menu: React.FC<Props> = (props) => {\n  //Dispatch\n  const dispatch = useDispatch();\n\n  //Render component\n  return (\n    <div>\n      {/*Wrapper*/}\n      <div id=\"menu\">\n        {/*Logout*/}\n        <Logout\n          onClick={(): void => {\n            //Change redux state\n            dispatch(logout());\n            dispatch(clearUsername());\n          }}\n        />\n        {/*Tittle*/}\n        <strong id=\"menuText\">Public chat room</strong>\n        {/*Hide/unhide icon*/}\n        <VisibilityIcon\n          id=\"viewButton\"\n          onClick={(): void => {\n            //Call props function\n            props.viewOnClick();\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","//Importing packages\nimport React, { useState, useEffect } from \"react\";\nimport { InputField } from \"./InputField\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducers/index\";\nimport { Redirect } from \"react-router-dom\";\nimport { SendButton } from \"./SendButton\";\nimport { UserBar } from \"./UserBar\";\nimport { ChatBubble } from \"./ChatBubble\";\nimport { send } from \"../scripts/send\";\nimport { v4 as uuid } from \"uuid\";\nimport { Menu } from \"./Menu\";\nimport \"./style/ChatRoom.css\";\nimport { askNotification } from \"../scripts/askNotify\";\n\n//! TESTING - REMOVE OR COMMENT IN PRODUCTION\n// import { reportUser } from \"../scripts/reportUser\";\n\n//Chat room component\nexport const ChatRoom: React.FC = () => {\n  //State\n  let [view, setView] = useState<boolean>(false);\n\n  //Data management variables\n  let textBoxData: string | undefined = undefined;\n\n  //Use effect\n  useEffect((): void => {\n    //Ask notification permission\n    if (\"Notification\" in window) {\n      askNotification();\n    }\n    \n    //! TESTING - REMOVE OR COMMENT IN PRODUCTION\n    // reportUser(\"AlvinC(Team)\", \"BriannaC(Team)\", \"TEST\");\n  });\n\n  //Redux state\n  const username = useSelector((state: RootState): RootState => {\n    return state.username;\n  });\n  const authenticated = useSelector((state: RootState): RootState => {\n    return state.login;\n  });\n\n  //Render user component\n  if (view) {\n    return (\n      <div>\n        {/*UserBar*/}\n        <UserBar\n          viewOnClick={(): void => {\n            //Change state\n            setView(false);\n          }}\n        />\n      </div>\n    );\n  }\n  //Redirect user if not authenticated\n  if (!authenticated) {\n    return (\n      <div>\n        {/*Redirect user*/}\n        <Redirect to=\"/\" />\n      </div>\n    );\n  }\n  //Render default component\n  return (\n    <div id=\"chatRoom\">\n      {/*Menu*/}\n      <Menu\n        viewOnClick={(): void => {\n          //Change state\n          setView(true);\n        }}\n      />\n      <ChatBubble />\n      {/*Send bar*/}\n      <div id=\"sendBar\">\n        {/*Input field*/}\n        <InputField\n          placeholder=\"Type a message...\"\n          onChangeEvent={(e: any): void => {\n            textBoxData = e.target.value;\n          }}\n        />\n        {/*Send button*/}\n        <SendButton\n          onclick={(): void => {\n            //Send message\n            send({\n              id: uuid(),\n              user: username,\n              content: textBoxData,\n              verified: null,\n            });\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","//Ask notification function\nexport const askNotification = (): void => {\n  //Check notification status\n  if (\n    Notification.permission === \"denied\" ||\n    Notification.permission === \"default\"\n  ) {\n    //Request permission\n    window.Notification.requestPermission();\n  } else return;\n};\n","//Importing packages\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Login } from \"./components/LoginPage\";\nimport { SignUpPage } from \"./components/SignUpPage\";\nimport { ChatRoom } from \"./components/ChatRoom\";\nimport \"./App.css\";\n\n//Main app component\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      {/*Browser router*/}\n      <BrowserRouter>\n        <Switch>\n          {/*Login route*/}\n          <Route path=\"/\" component={Login} exact />\n          {/*SignUp route*/}\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          {/*Chat room route*/}\n          <Route path=\"/public-chat-room:8080170\" component={ChatRoom} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\n//Export component\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","//Login reducer for redux\nconst loginReducer: any = (loggedInState: boolean = false, action: any) => {\n  //Redux actions check\n  switch (action.type) {\n    case \"AUTH_SIGN_IN\":\n      return (loggedInState = true);\n\n    case \"AUTH_SIGN_OUT\":\n      return (loggedInState = false);\n\n    default:\n      return loggedInState;\n  }\n};\n\n//Export reducer\nexport default loginReducer;\n","//Username reducer for redux\nconst usernameReducer: any = (usernameState: string = \"\", action: any) => {\n  //Redux action check\n  switch (action.type) {\n    case \"AUTH_SET_USERNAME\":\n      return (usernameState = action.payload);\n\n    case \"AUTH_LOGOUT_CLEAR_USERNAME\":\n      return (usernameState = \"\");\n\n    default:\n      return usernameState;\n  }\n};\n\n//Export reducer\nexport default usernameReducer;\n","//Importing packages\nimport { combineReducers } from \"redux\";\nimport loginReducer from \"./loginReducer\";\nimport usernameReducer from \"./usernameReducer\";\n\n//Combine reducers\nconst reducers: any = combineReducers({\n  username: usernameReducer,\n  login: loginReducer,\n});\n\n//Export reducers\nexport default reducers;\n\n//Export reducers type\nexport type RootState = ReturnType<typeof reducers>;\n","//Importing packages\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./redux/reducers/index\";\r\n\r\n//Redux configuration\r\nexport const store = createStore(reducers);\r\n\r\n//Render app\r\nReactDOM.render(\r\n  <>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}